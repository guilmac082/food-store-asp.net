@model Shop.Web.Models.Category.CategoryTopicModel

@using Microsoft.AspNetCore.Identity
@using Shop.Data.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div class="container body-content">
    <div class="row sectionHeader">
        <div class="sectionHeading">
            <span id="results">@Model.Category.Name</span>
            <form asp-controller="Category" asp-action="Search" method="post">
                <div class="searchForm">
                    <input asp-for="SearchQuery" type="text" placeholder="Search..." class="searchBar" onfocus="clearThis(this)">
                    <button type="submit" class="btn btn-categorySearch">
                        <i class="material-icons">search</i>
                    </button>
                </div>
                <input asp-for="Category.Id" name="id" type="hidden" />
            </form>
        </div>
        <div class="col-md-8 sectionDescription">
            <div class="categoryLogo" style="background-image: url(@Model.Category.ImageUrl); background-size:100%"></div>
            <p>Welcome to the <strong>@Model.Category.Name</strong> section</p>
            <p>
                Please read the Category Guidelines before ordering a product.
            </p>
        </div>
        @if(User.IsInRole("Admin"))
        {
            <div class="col-md-offset-3 col-md-1">
                <div class="row" style="margin-bottom:16px;">
                    <a class="btn btn-default" asp-controller="Category" asp-action="Edit" asp-route-id="@Model.Category.Id">Edit</a>
                </div>
                <div class="row">
                    @Html.ActionLink("Delete", "DeleteCategory", new { id = @Model.Category.Id },
            new { onclick = "return confirm('Are sure you want to delete category?');", @class="btn btn-danger" })
                </div>
            </div>
        }
    </div>
    @if(User.IsInRole("Admin"))
    {
        <div class="newFood">
            <a class="btn btn-block" asp-controller="Food" asp-action="NewFood" asp-route-id="@Model.Category.Id">New food</a>
        </div>
    }
    <div class="row" id="categoryIndexContent">
        @if (Model.Foods.Any())
        {
            <table class="table table-hover table-bordered" id="categoryIndexTable">
                <tbody>
                    @foreach (var food in Model.Foods)
                    {
                        <tr>
                            <td>
                               @Html.Partial("FoodSummary",food) 
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else if (string.IsNullOrEmpty(@Model.SearchQuery) || string.IsNullOrWhiteSpace(Model.SearchQuery))
        {
            <div class="noFoods">
                <i class="material-icons md-72">question_answer</i>
                <h3>
                    No search results found for @Model.SearchQuery! <br />
                </h3>
            </div>

        }

        else if (!@Model.Foods.Any())
        {
            <div class="noFoods">
                <i class="material-icons md-72">question_answer</i>
                <h3>
                    It looks like there are no @Model.Category.Name products yet. <br />
                </h3>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function clearThis(target) {
            target.value = "";
        }
    </script>
}
